name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    name: ${{matrix.application}} on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ['25.0.4']
        elixir: ['1.14.1']
        application: ['game_2048', 'browser_client']

    steps:
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-elixir-deps
      with:
        path: ${{ matrix.application }}/deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ matrix.application }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-${{ matrix.application }}-

    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
      with:
        path: ${{ matrix.application }}/_build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ matrix.application }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-${{ matrix.application }}-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      working-directory: ${{ matrix.application }}
      run: mix deps.get

    - name: Compiles without warnings
      working-directory: ${{ matrix.application }}
      run: mix compile --warnings-as-errors

    - name: Check Formatting
      working-directory: ${{ matrix.application }}
      run: mix format --check-formatted

    - name: Run tests
      working-directory: ${{ matrix.application }}
      run: mix test
